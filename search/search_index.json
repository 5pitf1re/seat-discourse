{
    "docs": [
        {
            "location": "/", 
            "text": "Hepraderp Aldent's - SeAT Discourse\n\n\nWelcome to the \nSeAT Discourse\n documentation pages!\n\n\n\n\nThis SeAT-Package is based upon \nSPINEN's Discourse SSO for Laravel\n and extended with various functions to support eve online use cases and SeAT roles.\n\nDiscourse\n is the leading free, open source application for moder web discussion forums. It is the very same forum that \neve-online forum\n uses!\n\n\nPrerequisite\n\n\n\n\nSeAT 3.0\n \n\n\n\n\nTable of Content\n\n\nThe Guide is mainly aimed for any herpaderps (like myself) that needs a step-by-step guide to install discourse and link it to SeAT. The second goal this guide tries to achieve is to convince others to use Discourse with SeAT. This Guide covers the following:\n\n\n\n\nDiscourse installation\n\n\nProxyserver configuration:  \nTraefik\n or \nnginx\n\n\nSeAT-Discourse package installations\n\n\nTips and tricks:\n\n\nCreate dedicated \nadmin user\n\n\n\n\n\n\n\n\nScreenshots\n\n\n\n\n\n\nContact\n\n\nIf you like this package feel free to donate some ISK's to Herpaderp Aldent. If you have feedback, found some bugs or got a feature request. Feel free to open an issue on \nGithub", 
            "title": "Home"
        }, 
        {
            "location": "/#hepraderp-aldents-seat-discourse", 
            "text": "Welcome to the  SeAT Discourse  documentation pages!   This SeAT-Package is based upon  SPINEN's Discourse SSO for Laravel  and extended with various functions to support eve online use cases and SeAT roles. Discourse  is the leading free, open source application for moder web discussion forums. It is the very same forum that  eve-online forum  uses!", 
            "title": "Hepraderp Aldent's - SeAT Discourse"
        }, 
        {
            "location": "/#prerequisite", 
            "text": "SeAT 3.0", 
            "title": "Prerequisite"
        }, 
        {
            "location": "/#table-of-content", 
            "text": "The Guide is mainly aimed for any herpaderps (like myself) that needs a step-by-step guide to install discourse and link it to SeAT. The second goal this guide tries to achieve is to convince others to use Discourse with SeAT. This Guide covers the following:   Discourse installation  Proxyserver configuration:   Traefik  or  nginx  SeAT-Discourse package installations  Tips and tricks:  Create dedicated  admin user", 
            "title": "Table of Content"
        }, 
        {
            "location": "/#screenshots", 
            "text": "", 
            "title": "Screenshots"
        }, 
        {
            "location": "/#contact", 
            "text": "If you like this package feel free to donate some ISK's to Herpaderp Aldent. If you have feedback, found some bugs or got a feature request. Feel free to open an issue on  Github", 
            "title": "Contact"
        }, 
        {
            "location": "/installation/discourse_installation/", 
            "text": "Discourse\n\n\nThis is a purely optional guide and serves only for reference. Please have a look at the \nofficial discourse documentation\n.\n\n\nInstall Docker\n\n\n\n\nNot necessarily for SeAT-Docker Installations\n\n\nIf you are running a dockerized SeAT Instance you do not need to do this step\n\n\n\n\nwget -qO- https://get.docker.io/ \n|\n sh\n\n\n\n\n\nInstall Discourse\n\n\nDownload Discourse\n\n\nmkdir /opt/discourse\ngit clone https://github.com/discourse/discourse_docker.git /opt/discourse\n\n\n\n\n\nConfigure\n\n\nCopy the sample configuration into the \n/containers\n folder \n\n\ncd\n /opt/discourse\ncp samples/standalone.yml containers/app.yml\n\n\n\n\n\nthen edit the \napp.yml\n with a text editor (\nnano\n, \nvi\n, etc.)\n\n\nnano containers/app.yml\n\n\n\n\n\nChange the following:\n\n\n\n\nWarning\n\n\nWarning Discourse will not work from an IP address, you must own a domain name such as \nexample.com\n to proceed.\n\n\n\n\n\n\nDISCOURSE_HOSTNAME\n should be \ndiscourse.example.com\n or something similar.\n\n\n\n\n\n\nWarning\n\n\nEmail is CRITICAL for account creation and notifications in Discourse.\n If you do not properly configure email before bootstrapping YOU WILL HAVE A BROKEN SITE!\n\n\n\n\n\n\nDISCOURSE_DEVELOPER_EMAILS\n should be a list of admin account email addresses separated by commas.\n\n\nDISCOURSE_SMTP_ADDRESS\n\n\nDISCOURSE_SMTP_USER_NAME\n\n\nDISCOURSE_SMTP_PASSWORD\n\n\n\n\n\n\nHint\n\n\nNo existing mail server? Checkout discourse's \nRecommended Email Providers for Discourse\n \n\n\n\n\nBuild and launch\n\n\n./launcher bootstrap app\n./launcher start app\n\n\n\n\n\n\n\nSuccess\n\n\nYour discourse instance is now available at \ndiscourse.example.com\n\n\n\n\n\n\nHint\n\n\nAfter every change to the \napp.yml\n you need to rebuild your discourse application: \n./launcher rebuild app", 
            "title": "Discourse Installation"
        }, 
        {
            "location": "/installation/discourse_installation/#discourse", 
            "text": "This is a purely optional guide and serves only for reference. Please have a look at the  official discourse documentation .", 
            "title": "Discourse"
        }, 
        {
            "location": "/installation/discourse_installation/#install-docker", 
            "text": "Not necessarily for SeAT-Docker Installations  If you are running a dockerized SeAT Instance you do not need to do this step   wget -qO- https://get.docker.io/  |  sh", 
            "title": "Install Docker"
        }, 
        {
            "location": "/installation/discourse_installation/#install-discourse", 
            "text": "", 
            "title": "Install Discourse"
        }, 
        {
            "location": "/installation/discourse_installation/#download-discourse", 
            "text": "mkdir /opt/discourse\ngit clone https://github.com/discourse/discourse_docker.git /opt/discourse", 
            "title": "Download Discourse"
        }, 
        {
            "location": "/installation/discourse_installation/#configure", 
            "text": "Copy the sample configuration into the  /containers  folder   cd  /opt/discourse\ncp samples/standalone.yml containers/app.yml  then edit the  app.yml  with a text editor ( nano ,  vi , etc.)  nano containers/app.yml  Change the following:   Warning  Warning Discourse will not work from an IP address, you must own a domain name such as  example.com  to proceed.    DISCOURSE_HOSTNAME  should be  discourse.example.com  or something similar.    Warning  Email is CRITICAL for account creation and notifications in Discourse.  If you do not properly configure email before bootstrapping YOU WILL HAVE A BROKEN SITE!    DISCOURSE_DEVELOPER_EMAILS  should be a list of admin account email addresses separated by commas.  DISCOURSE_SMTP_ADDRESS  DISCOURSE_SMTP_USER_NAME  DISCOURSE_SMTP_PASSWORD    Hint  No existing mail server? Checkout discourse's  Recommended Email Providers for Discourse", 
            "title": "Configure"
        }, 
        {
            "location": "/installation/discourse_installation/#build-and-launch", 
            "text": "./launcher bootstrap app\n./launcher start app   Success  Your discourse instance is now available at  discourse.example.com    Hint  After every change to the  app.yml  you need to rebuild your discourse application:  ./launcher rebuild app", 
            "title": "Build and launch"
        }, 
        {
            "location": "/installation/proxy_server/traefik/", 
            "text": "Traefik\n\n\nIf you have chosen to use traefik as proxy-server you need to do a few things:\n\n\nChange TCP/IP Ports\n\n\nTo install behind a proxy server, look for this section in the \napp.yml\n and change the external ports\n\n\n## which TCP/IP ports should this container expose?\n\n\n## If you want Discourse to share a port with another webserver like Apache or nginx,\n\n\n## see https://meta.discourse.org/t/17247 for details\n\nexpose:\n  - \n80:80\n   \n# http\n\n  - \n443:443\n \n# https\n\n\n\n\n\n\nand change it to something alike:\n\n\nexpose:\n  - \n7890:80\n   \n# http\n\n  - \n7891:443\n \n# https\n\ndocker_args:\n  - \n--network=web\n\n  - \n--expose=80\n\n  - \n-l traefik.backend=forum\n\n  - \n-l traefik.frontend.rule=Host:discourse.example.com\n\n  - \n-l traefik.docker.network=web\n\n  - \n-l traefik.port=80\n\n\n\n\n\n\nBuild and launch\n\n\nAfter every change to the \napp.yml\n you need to rebuild your discourse application:\n\n\n./launcher rebuild app\n./launcher start app\n\n\n\n\n\n\n\nSuccess\n\n\nYour discourse instance is now available at \ndiscourse.example.com\n. If you have setup your \n.toml\n correctly your discourse instance will be available via \nhttps://", 
            "title": "traefik"
        }, 
        {
            "location": "/installation/proxy_server/traefik/#traefik", 
            "text": "If you have chosen to use traefik as proxy-server you need to do a few things:", 
            "title": "Traefik"
        }, 
        {
            "location": "/installation/proxy_server/traefik/#change-tcpip-ports", 
            "text": "To install behind a proxy server, look for this section in the  app.yml  and change the external ports  ## which TCP/IP ports should this container expose?  ## If you want Discourse to share a port with another webserver like Apache or nginx,  ## see https://meta.discourse.org/t/17247 for details \nexpose:\n  -  80:80     # http \n  -  443:443   # https   and change it to something alike:  expose:\n  -  7890:80     # http \n  -  7891:443   # https \ndocker_args:\n  -  --network=web \n  -  --expose=80 \n  -  -l traefik.backend=forum \n  -  -l traefik.frontend.rule=Host:discourse.example.com \n  -  -l traefik.docker.network=web \n  -  -l traefik.port=80", 
            "title": "Change TCP/IP Ports"
        }, 
        {
            "location": "/installation/proxy_server/traefik/#build-and-launch", 
            "text": "After every change to the  app.yml  you need to rebuild your discourse application:  ./launcher rebuild app\n./launcher start app   Success  Your discourse instance is now available at  discourse.example.com . If you have setup your  .toml  correctly your discourse instance will be available via  https://", 
            "title": "Build and launch"
        }, 
        {
            "location": "/installation/proxy_server/nginx/", 
            "text": "Nginx\n\n\nIf you have chosen to use nginx as proxy-server you need to do a few things:\n\n\nChange TCP/IP Ports\n\n\nTo install behind a proxy server, look for this section in the \napp.yml\n and change the external ports\n\n\n## which TCP/IP ports should this container expose?\n\n\n## If you want Discourse to share a port with another webserver like Apache or nginx,\n\n\n## see https://meta.discourse.org/t/17247 for details\n\nexpose:\n  - \n80:80\n   \n# http\n\n  - \n443:443\n \n# https\n\n\n\n\n\n\nand change it to something alike:\n\n\nexpose:\n  - \n7890:80\n   \n# http\n\n  - \n7891:443\n \n# https\n\n\n\n\n\n\nSetup nginx proxy-pass\n\n\nNext we need to tell nginx to proxy pass our pre-defined ports; we do this by creating a configuration file for the forum:\n\n\nvi /etc/nginx/sites-available/discourse\n\n\n\n\n\nand set the contents to:\n\n\nserver \n{\n\n    listen \n80\n;\n\n    server_name discourse.example.com\n;\n\n\n    location / \n{\n\n        proxy_pass http://127.0.0.1:7890\n;\n\n    \n}\n\n\n}\n\n\n\n\n\n\nEnable new site configuration\n\n\nln -s /etc/nginx/sites-available/discourse /etc/nginx-sites-enabled/discourse\n\n\n\n\n\nTest nginx\n\n\nnginx -t\n\n\n\n\n\nSuccessful test should yield an output of:\n\n\n\u279c  ~ nginx -t\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf \ntest\n is successful\n\n\n\n\n\nRestart nginx to apply new settings\n\n\nsystemctl restart nginx\n\n\n\n\n\nBuild and launch\n\n\nAfter every change to the \napp.yml\n you need to rebuild your discourse application:\n\n\n./launcher rebuild app\n./launcher start app\n\n\n\n\n\n\n\nSuccess\n\n\nYour discourse instance is now available at \ndiscourse.example.com\n.", 
            "title": "nginx"
        }, 
        {
            "location": "/installation/proxy_server/nginx/#nginx", 
            "text": "If you have chosen to use nginx as proxy-server you need to do a few things:", 
            "title": "Nginx"
        }, 
        {
            "location": "/installation/proxy_server/nginx/#change-tcpip-ports", 
            "text": "To install behind a proxy server, look for this section in the  app.yml  and change the external ports  ## which TCP/IP ports should this container expose?  ## If you want Discourse to share a port with another webserver like Apache or nginx,  ## see https://meta.discourse.org/t/17247 for details \nexpose:\n  -  80:80     # http \n  -  443:443   # https   and change it to something alike:  expose:\n  -  7890:80     # http \n  -  7891:443   # https", 
            "title": "Change TCP/IP Ports"
        }, 
        {
            "location": "/installation/proxy_server/nginx/#setup-nginx-proxy-pass", 
            "text": "Next we need to tell nginx to proxy pass our pre-defined ports; we do this by creating a configuration file for the forum:  vi /etc/nginx/sites-available/discourse  and set the contents to:  server  { \n    listen  80 ; \n    server_name discourse.example.com ; \n\n    location /  { \n        proxy_pass http://127.0.0.1:7890 ; \n     }  }", 
            "title": "Setup nginx proxy-pass"
        }, 
        {
            "location": "/installation/proxy_server/nginx/#enable-new-site-configuration", 
            "text": "ln -s /etc/nginx/sites-available/discourse /etc/nginx-sites-enabled/discourse", 
            "title": "Enable new site configuration"
        }, 
        {
            "location": "/installation/proxy_server/nginx/#test-nginx", 
            "text": "nginx -t  Successful test should yield an output of:  \u279c  ~ nginx -t\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf  test  is successful", 
            "title": "Test nginx"
        }, 
        {
            "location": "/installation/proxy_server/nginx/#restart-nginx-to-apply-new-settings", 
            "text": "systemctl restart nginx", 
            "title": "Restart nginx to apply new settings"
        }, 
        {
            "location": "/installation/proxy_server/nginx/#build-and-launch", 
            "text": "After every change to the  app.yml  you need to rebuild your discourse application:  ./launcher rebuild app\n./launcher start app   Success  Your discourse instance is now available at  discourse.example.com .", 
            "title": "Build and launch"
        }, 
        {
            "location": "/installation/package_installation/", 
            "text": "SeAT-Discourse Installation\n\n\nIn order to install SeAT-Discourse you must prepare some things and finally install the plugin:\n\n\nPreparation\n\n\nCreate API key\n\n\nNavigate to \ndiscourse.example.com\n and log on using the new Admin User. Top right press the 3 lines and select \nAdmin\n. Go to API tab and press \nGenerate Master API Key\n.\n\n\nAdd the following values to your SeAT \n.env\n file:\n\n\n\n\nDISCOURSE_URL\n: \nhttps://discourse.example.com\n (do not add a trailing slash!)\n\n\nDISCOURSE_API_USERNAME\n: the username of the admin account you generated the API key with\n\n\nDISCOURSE_API_KEY\n: the key you just generated\n\n\n\n\nConfigure SSO\n\n\nNavigate to \ndiscourse.example.com\n and log in. Back to the admin site, scroll down to find SSO settings and set the following:\n\n\n\n\nenable_sso\n: True\n\n\nsso_url\n: \nhttp://seat.example.com/discourse/sso\n\n\nsso_secret\n: some secure key\n\n\n\n\nSave, now set \nDISCOURSE_SECRET\n in your SeAT \n.env\n file to the secure key you just put in Discourse.\n\n\nPackage installation\n\n\nInstall Discourse SSO for Laravel:\n\n\n\n\n\n  \nDocker\n\n  \nNon-Docker\n\n\n\n\n\n\n\n\n    \nAdd \nherpaderpaldent/seat-discourse\n to SeAT Plugins list to install inside your \n.env\n\n\n    \n# SeAT Plugins\n    # This is a list of the all of the third party plugins that you\n    # would like to install as part of SeAT. Package names should be\n    # comma seperated if multiple packages should be installed.\n    SEAT_PLUGINS=herpaderpaldent/seat-discourse\n    \n\n\n\n\n\n\n    \nInside your SeAT Folder run the following:\n\n\n    \ncomposer require herpaderpaldent/seat-discourse\n\n\n\n\n\n\n\n\nadd the following to your SeAT \n.env\n file:\n\n\n\n\nDISCOURSE_URL\n (do not add a trailing slash!)\n\n\nDISCOURSE_API_USERNAME\n the username of the admin account you generated the API key with\n\n\nDISCOURSE_API_KEY\n the key you just generated\n\n\n\n\nDISCOURSE_URL\n=\nhttps://discourse.example.com\n\nDISCOURSE_API_USERNAME\n=\nusername\n\nDISCOURSE_API_KEY\n=\nkey\n\nDISCOURSE_SECRET\n=\nsecret\n\n\n\n\n\n\n\nHint\n\n\nIf you use Docker you need to run \ndocker-compose up -d\n in your \nopt/seat-docker\n folder.\n\n\n\n\n\n\nSuccess\n\n\nNow you got SeAT-Discourse installed. \n\n\n\n\nFor SeAT 3.0, you are done with the Install\n\n\nThe package uses the auto registration feature\n\n\nLeft to do\n\n\n\n\ndocument Discourse configuration\n\n\nsend \nlog out\n to Discourse when disabling/deleting the user\n\n\nfailed login redirect", 
            "title": "Package Installation"
        }, 
        {
            "location": "/installation/package_installation/#seat-discourse-installation", 
            "text": "In order to install SeAT-Discourse you must prepare some things and finally install the plugin:", 
            "title": "SeAT-Discourse Installation"
        }, 
        {
            "location": "/installation/package_installation/#preparation", 
            "text": "", 
            "title": "Preparation"
        }, 
        {
            "location": "/installation/package_installation/#create-api-key", 
            "text": "Navigate to  discourse.example.com  and log on using the new Admin User. Top right press the 3 lines and select  Admin . Go to API tab and press  Generate Master API Key .  Add the following values to your SeAT  .env  file:   DISCOURSE_URL :  https://discourse.example.com  (do not add a trailing slash!)  DISCOURSE_API_USERNAME : the username of the admin account you generated the API key with  DISCOURSE_API_KEY : the key you just generated", 
            "title": "Create API key"
        }, 
        {
            "location": "/installation/package_installation/#configure-sso", 
            "text": "Navigate to  discourse.example.com  and log in. Back to the admin site, scroll down to find SSO settings and set the following:   enable_sso : True  sso_url :  http://seat.example.com/discourse/sso  sso_secret : some secure key   Save, now set  DISCOURSE_SECRET  in your SeAT  .env  file to the secure key you just put in Discourse.", 
            "title": "Configure SSO"
        }, 
        {
            "location": "/installation/package_installation/#package-installation", 
            "text": "Install Discourse SSO for Laravel:   \n   Docker \n   Non-Docker    \n\n     Add  herpaderpaldent/seat-discourse  to SeAT Plugins list to install inside your  .env \n\n     # SeAT Plugins\n    # This is a list of the all of the third party plugins that you\n    # would like to install as part of SeAT. Package names should be\n    # comma seperated if multiple packages should be installed.\n    SEAT_PLUGINS=herpaderpaldent/seat-discourse\n       \n     Inside your SeAT Folder run the following: \n\n     composer require herpaderpaldent/seat-discourse    add the following to your SeAT  .env  file:   DISCOURSE_URL  (do not add a trailing slash!)  DISCOURSE_API_USERNAME  the username of the admin account you generated the API key with  DISCOURSE_API_KEY  the key you just generated   DISCOURSE_URL = https://discourse.example.com DISCOURSE_API_USERNAME = username DISCOURSE_API_KEY = key DISCOURSE_SECRET = secret   Hint  If you use Docker you need to run  docker-compose up -d  in your  opt/seat-docker  folder.    Success  Now you got SeAT-Discourse installed.", 
            "title": "Package installation"
        }, 
        {
            "location": "/installation/package_installation/#for-seat-30-you-are-done-with-the-install", 
            "text": "The package uses the auto registration feature", 
            "title": "For SeAT 3.0, you are done with the Install"
        }, 
        {
            "location": "/installation/package_installation/#left-to-do", 
            "text": "document Discourse configuration  send  log out  to Discourse when disabling/deleting the user  failed login redirect", 
            "title": "Left to do"
        }, 
        {
            "location": "/tips_and_tricks/create_admin_user/", 
            "text": "Create Admin User using Ruby CLI\n\n\nCreating a dedicated Admin User will prevent issues with SSO API key being invalidated due to username change, inactive tokens, character transfers, etc.\n\n\nCreate Admin User using Ruby CLI\n\n\nSSH into the Server\n\n\n\n\nHint\n\n\nYou must have SSH access and elevated permissions to the server running Discourse to use this method.\n\n\n\n\n\n\nInfo\n\n\nIn this example we will be using a SSH RSA key to authenticate, if you use a username/password, adjust the code accordingly.\n\n\n\n\nssh -i id_rsa root@www.example.com\n\n\n\n\n\nChange working Directory\n\n\nChange the shell working directory to the Discourse root directory. If you followed the installation instructions on this site, it should be \n/opt/Discourse\n\n\nccd /opt/discourse\n\n\n\n\n\nEnter the Discourse Container\n\n\nUsing the \nlauncher\n script, enter the Discourse Docker container\n\n\n./launcher enter app\n\n\n\n\n\nCreate Admin User\n\n\nUsing the Ruby \nrake\n CLI, initiate the admin user creation and fill in the prompts\n\n\nrake admin:create\n\n\n\n\n\n\n\nCreate Admin User using Admin Sheet\n\n\n\n\nWarning\n\n\nDiscourse must have a functional email provider configured and SSO must be disabled in order to use this method.\n\n\n\n\nInvite User\n\n\nNavigate to \ndiscourse.example.com\n and log on, top right press the 3 lines and select \nAdmin\n, then go to the User tab and press \nSend an Invite\n button\n\n\n\n\nOnce on the User tab, press the \nSend an Invite\n button again to open the invite dialog; input the email address you intend to use for your Admin User and click \nInvite\n\n\n\n\nComplete User Registration\n\n\nWait to receive Discourse email invite at your Admin User's email (ussually takes less than a minute) and use the link in the email to complete the Admin User registration \n(be sure to use a seperate browser instance to not logout your main Admin).\n\n\nGrant Admin Role\n\n\nUsing your original Admin account, from the User tab, find an click on the new Admin User that you created, scroll down to the \nPermissions\n section, locate and press the \nGrant Admin\n button.\n\n\nYour initial Admin account will be sent a confirmation email, which will contain a link to confirm and finalize the granting of Admin roles.", 
            "title": "Create Admin User"
        }, 
        {
            "location": "/tips_and_tricks/create_admin_user/#create-admin-user-using-ruby-cli", 
            "text": "Creating a dedicated Admin User will prevent issues with SSO API key being invalidated due to username change, inactive tokens, character transfers, etc.", 
            "title": "Create Admin User using Ruby CLI"
        }, 
        {
            "location": "/tips_and_tricks/create_admin_user/#create-admin-user-using-ruby-cli_1", 
            "text": "", 
            "title": "Create Admin User using Ruby CLI"
        }, 
        {
            "location": "/tips_and_tricks/create_admin_user/#ssh-into-the-server", 
            "text": "Hint  You must have SSH access and elevated permissions to the server running Discourse to use this method.    Info  In this example we will be using a SSH RSA key to authenticate, if you use a username/password, adjust the code accordingly.   ssh -i id_rsa root@www.example.com", 
            "title": "SSH into the Server"
        }, 
        {
            "location": "/tips_and_tricks/create_admin_user/#change-working-directory", 
            "text": "Change the shell working directory to the Discourse root directory. If you followed the installation instructions on this site, it should be  /opt/Discourse  ccd /opt/discourse", 
            "title": "Change working Directory"
        }, 
        {
            "location": "/tips_and_tricks/create_admin_user/#enter-the-discourse-container", 
            "text": "Using the  launcher  script, enter the Discourse Docker container  ./launcher enter app", 
            "title": "Enter the Discourse Container"
        }, 
        {
            "location": "/tips_and_tricks/create_admin_user/#create-admin-user", 
            "text": "Using the Ruby  rake  CLI, initiate the admin user creation and fill in the prompts  rake admin:create", 
            "title": "Create Admin User"
        }, 
        {
            "location": "/tips_and_tricks/create_admin_user/#create-admin-user-using-admin-sheet", 
            "text": "Warning  Discourse must have a functional email provider configured and SSO must be disabled in order to use this method.", 
            "title": "Create Admin User using Admin Sheet"
        }, 
        {
            "location": "/tips_and_tricks/create_admin_user/#invite-user", 
            "text": "Navigate to  discourse.example.com  and log on, top right press the 3 lines and select  Admin , then go to the User tab and press  Send an Invite  button   Once on the User tab, press the  Send an Invite  button again to open the invite dialog; input the email address you intend to use for your Admin User and click  Invite", 
            "title": "Invite User"
        }, 
        {
            "location": "/tips_and_tricks/create_admin_user/#complete-user-registration", 
            "text": "Wait to receive Discourse email invite at your Admin User's email (ussually takes less than a minute) and use the link in the email to complete the Admin User registration \n(be sure to use a seperate browser instance to not logout your main Admin).", 
            "title": "Complete User Registration"
        }, 
        {
            "location": "/tips_and_tricks/create_admin_user/#grant-admin-role", 
            "text": "Using your original Admin account, from the User tab, find an click on the new Admin User that you created, scroll down to the  Permissions  section, locate and press the  Grant Admin  button.  Your initial Admin account will be sent a confirmation email, which will contain a link to confirm and finalize the granting of Admin roles.", 
            "title": "Grant Admin Role"
        }
    ]
}